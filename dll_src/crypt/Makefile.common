PROJECT:=ncrypt
NDLL:=ndll/$(ARCH)/$(PROJECT).ndll
HXCPPDLL:=ndll/$(ARCH)/$(PROJECT).dso

HXTEST:=crypttest.n

# for ndll
SRC_PATHS:=src
SRC_ARCH:=$(foreach PATH,$(ARCH_PATHS), $(wildcard $(PATH)/*.c))
SRCS:=$(foreach PATH,$(SRC_PATHS), $(wildcard $(PATH)/*.c)) $(SRC_ARCH)
HEADERS:=$(foreach PATH,$(SRC_PATHS), $(wildcard $(PATH)/*.h)) $(SRC_ARCH)

HX_PATHS:=neko/net test
HX_SRCS:=$(foreach PATH,$(HX_PATHS), $(wildcard $(PATH)/*.hx))

all: $(NDLL) $(HXCPPDLL)

$(NDLL): $(SRCS) $(HEADERS)
	@echo path: $(SRC_PATHS)
	@echo srcs: $(SRCS), headers: $(HEADERS)
	$(CC) -DNEKO $(NEKO_FLAGS) $(LOCAL_FLAGS) -o $@ $(SRCS)
	$(STRIP) --strip-unneeded $@

$(HXCPPDLL): $(SRCS) $(HEADERS)
	haxelib run hxcpp build.xml

$(LUADLL): $(SRCS) $(HEADERS)
	$(CC) -x c -DLUA $(LUA_FLAGS) $(LOCAL_FLAGS) -o $@ $(SRCS)

tests: $(HXTEST)

$(HXTEST): $(HX_SRCS)
	haxe build.hmxl

clean:
	$(RM) $(NDLL)
	$(RM) $(HXCPPDLL)
	$(RM) $(HXTEST)
	$(RM) -rf obj
	$(RM) all_objs
	$(RM) core.*

luatests:
	cd tests && lua lua_test.lua

install:
	cp $(NDLL) ../../ext3/NDLL/$(ARCH)/
	cp $(HXCPPDLL) ../../ext3/NDLL/$(ARCH)/

install-dev: $(NDLL)
	cp $(NDLL) $(CAFFEINE_NDLL_DIR)


dummy:
